global using System.ComponentModel.DataAnnotations;
global using System.Security.Claims;
global using System.Text;
global using System.Text.Json;
global using System.Text.Json.Serialization;
global using Microsoft.AspNetCore.Authentication.JwtBearer;
global using Microsoft.AspNetCore.Authorization;
global using Microsoft.AspNetCore.Identity;
global using Microsoft.AspNetCore.Mvc;
global using Microsoft.EntityFrameworkCore;
global using Microsoft.IdentityModel.Tokens;
global using Scalar.AspNetCore;
global using SmartClinic.API;
global using SmartClinic.API.Bases;
global using SmartClinic.API.Errors;
global using SmartClinic.API.RequestHelper;
global using SmartClinic.Application;
global using SmartClinic.Application.Bases;
global using SmartClinic.Application.Features.Appointments.Command.CreateAppointment;
global using SmartClinic.Application.Features.Appointments.Command.UpdateAppointmnet;
global using SmartClinic.Application.Features.Appointments.Query.AllAppointments;
global using SmartClinic.Application.Features.Appointments.Query.DoctorAppointments;
global using SmartClinic.Application.Features.Appointments.Query.PatientAppointments;
global using SmartClinic.Application.Features.Auth;
global using SmartClinic.Application.Features.Auth.Command;
global using SmartClinic.Application.Features.Doctors.Command.CreateDoctor;
global using SmartClinic.Application.Features.Doctors.Command.UpdateDoctor;
global using SmartClinic.Application.Features.Doctors.Query.GetDoctor;
global using SmartClinic.Application.Features.Doctors.Query.GetDoctors;
global using SmartClinic.Application.Features.Doctors.Query.GetDoctorWithSchedulesSlots;
global using SmartClinic.Application.Features.DoctorsSchedules.Command.CreateDoctorSchedule;
global using SmartClinic.Application.Features.DoctorsSchedules.Command.DeleteDoctorSchedule;
global using SmartClinic.Application.Features.Patients.Query.GetPatients;
global using SmartClinic.Application.Features.Profile.Command;
global using SmartClinic.Application.Features.Profile.Query;
global using SmartClinic.Application.Features.Specializations.Query.GetSpecialization;
global using SmartClinic.Application.Features.Specializations.Query.GetSpecializations;
global using SmartClinic.Application.Services.Interfaces;
global using SmartClinic.Domain.DTOs.Auth;
global using SmartClinic.Domain.Entities;
global using SmartClinic.Infrastructure;
global using SmartClinic.Infrastructure.Data;
